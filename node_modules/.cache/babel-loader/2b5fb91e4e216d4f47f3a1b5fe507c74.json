{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_apps\\\\mern-todo-app\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport gql from \"graphql-tag\";\nimport { graphql } from 'react-apollo';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\nconst TodosQuery = gql`\n{\n  todos {\n    id\n    text\n    complete\n  }\n}\n`;\nconst [checked, setChecked] = React.useState([0]);\n\nconst handleToggle = value => () => {\n  const currentIndex = checked.indexOf(value);\n  const newChecked = [...checked];\n\n  if (currentIndex === -1) {\n    newChecked.push(value);\n  } else {\n    newChecked.splice(currentIndex, 1);\n  }\n\n  setChecked(newChecked);\n};\n\nfunction App(props) {\n  // render() {\n  //   const { data: { loading, todos } } = this.props;\n  //   if (loading) {\n  //     return null;\n  //   }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 'auto',\n      width: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    elevation: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, todos.map(todo => /*#__PURE__*/React.createElement(\"div\", {\n    key: `${todo.id}-todo-item`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 31\n    }\n  }, todo.text)), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, [0, 1, 2, 3].map(value => {\n    const labelId = `checkbox-list-label-${value}`;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: value,\n      role: undefined,\n      dense: true,\n      button: true,\n      onClick: handleToggle(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"start\",\n      checked: checked.indexOf(value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: `Line item ${value + 1}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"comments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CommentIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 23\n      }\n    }))));\n  })))));\n} // }\n\n\nexport default graphql(TodosQuery)(App);","map":{"version":3,"sources":["D:/react_apps/mern-todo-app/client/src/App.js"],"names":["React","Component","gql","graphql","Paper","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","CommentIcon","TodosQuery","checked","setChecked","useState","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","App","props","display","margin","width","todos","map","todo","id","text","labelId","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport gql from \"graphql-tag\";\nimport { graphql } from 'react-apollo';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\n\nconst TodosQuery = gql`\n{\n  todos {\n    id\n    text\n    complete\n  }\n}\n`;\n\nconst [checked, setChecked] = React.useState([0]);\nconst handleToggle = (value) => () => {\n  const currentIndex = checked.indexOf(value);\n  const newChecked = [...checked];\n  if (currentIndex === -1) {\n    newChecked.push(value);\n  } else {\n    newChecked.splice(currentIndex, 1);\n  }\n  setChecked(newChecked);\n};\n\nfunction App(props) {\n\n  // render() {\n  //   const { data: { loading, todos } } = this.props;\n  //   if (loading) {\n  //     return null;\n  //   }\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{ margin: 'auto', width: 400 }}>\n        <Paper elevation={1}>\n          {todos.map(todo => (<div key={`${todo.id}-todo-item`}>{todo.text}</div>))}\n          <List>\n            {[0, 1, 2, 3].map((value) => {\n              const labelId = `checkbox-list-label-${value}`;\n\n              return (\n                <ListItem key={value} role={undefined} dense button onClick={handleToggle(value)}>\n                  <ListItemIcon>\n                    <Checkbox\n                      edge=\"start\"\n                      checked={checked.indexOf(value) !== -1}\n                      tabIndex={-1}\n                      disableRipple\n                      inputProps={{ 'aria-labelledby': labelId }}\n                    />\n                  </ListItemIcon>\n                  <ListItemText id={labelId} primary={`Line item ${value + 1}`} />\n                  <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"comments\">\n                      <CommentIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              );\n            })}\n          </List>\n        </Paper>\n      </div>\n    </div>\n  );\n}\n// }\n\n\nexport default graphql(TodosQuery)(App);\n"]},"metadata":{},"sourceType":"module"}