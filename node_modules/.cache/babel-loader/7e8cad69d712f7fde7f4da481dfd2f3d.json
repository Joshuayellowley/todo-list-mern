{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_apps\\\\mern-todo-app\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport gql from \"graphql-tag\";\nimport { graphql } from 'react-apollo';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\nconst TodosQuery = gql`\n{\n  todos {\n    id\n    text\n    complete\n  }\n}\n`;\nconst [checked, setChecked] = React.useState([0]);\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleToggle = value => () => {\n      const currentIndex = checked.indexOf(value);\n      const newChecked = [...checked];\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n\n      setChecked(newChecked);\n    };\n  }\n\n  render() {\n    const {\n      data: {\n        loading,\n        todos\n      }\n    } = this.props;\n\n    if (loading) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: 'auto',\n        width: 400\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      elevation: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, todos.map(todo => /*#__PURE__*/React.createElement(\"div\", {\n      key: `${todo.id}-todo-item`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }\n    }, todo.text)), /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, [0, 1, 2, 3].map(value => {\n      const labelId = `checkbox-list-label-${value}`;\n      return /*#__PURE__*/React.createElement(ListItem, {\n        key: value,\n        role: undefined,\n        dense: true,\n        button: true,\n        onClick: handleToggle(value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        edge: \"start\",\n        checked: checked.indexOf(value) !== -1,\n        tabIndex: -1,\n        disableRipple: true,\n        inputProps: {\n          'aria-labelledby': labelId\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        id: labelId,\n        primary: `Line item ${value + 1}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        edge: \"end\",\n        \"aria-label\": \"comments\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(CommentIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }\n      }))));\n    })))));\n  }\n\n}\n\nexport default graphql(TodosQuery)(App);","map":{"version":3,"sources":["D:/react_apps/mern-todo-app/client/src/App.js"],"names":["React","Component","gql","graphql","Paper","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","CommentIcon","TodosQuery","checked","setChecked","useState","App","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","render","data","loading","todos","props","display","margin","width","map","todo","id","text","labelId","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport gql from \"graphql-tag\";\nimport { graphql } from 'react-apollo';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\n\nconst TodosQuery = gql`\n{\n  todos {\n    id\n    text\n    complete\n  }\n}\n`;\n\nconst [checked, setChecked] = React.useState([0]);\n\nclass App extends Component {\n\n\n  handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  render() {\n    const { data: { loading, todos } } = this.props;\n    if (loading) {\n      return null;\n    }\n    return (\n      <div style={{ display: 'flex' }}>\n        <div style={{ margin: 'auto', width: 400 }}>\n          <Paper elevation={1}>\n            {todos.map(todo => (<div key={`${todo.id}-todo-item`}>{todo.text}</div>))}\n            <List>\n              {[0, 1, 2, 3].map((value) => {\n                const labelId = `checkbox-list-label-${value}`;\n\n                return (\n                  <ListItem key={value} role={undefined} dense button onClick={handleToggle(value)}>\n                    <ListItemIcon>\n                      <Checkbox\n                        edge=\"start\"\n                        checked={checked.indexOf(value) !== -1}\n                        tabIndex={-1}\n                        disableRipple\n                        inputProps={{ 'aria-labelledby': labelId }}\n                      />\n                    </ListItemIcon>\n                    <ListItemText id={labelId} primary={`Line item ${value + 1}`} />\n                    <ListItemSecondaryAction>\n                      <IconButton edge=\"end\" aria-label=\"comments\">\n                        <CommentIcon />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                );\n              })}\n            </List>\n          </Paper>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n\n\n\n\n\nexport default graphql(TodosQuery)(App);\n"]},"metadata":{},"sourceType":"module"}